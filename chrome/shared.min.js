const runtime=chrome.runtime,keyTextSize="textSize",keyLineHeight="lineHeight",keyOnOff="onOff",keyFont="font",keyWhitelisted="whitelisted",keyCustomSettings="customSettings",keyCustomFonts="customFonts",keys=["textSize","lineHeight","onOff","font","whitelisted","customSettings","customFonts"],defaultFont="Droid Arabic Naskh",defaultTextSize=125,defaultLineHeight=145,defaultColor="#880E4F",homePage="http://basshelal.github.io/Wudooh",defaultDelay=250,reasonUpdateAllText="updateAllText",reasonInjectCustomFonts="injectCustomFonts",reasonToggleOff="toggleOff",htmlEditables=["textarea","input","text","email","number","search","tel","url","password"],allWudoohFonts=["Droid Arabic Naskh","Noto Naskh Arabic","Arabic Typesetting","Simplified Arabic","Traditional Arabic","Noto Sans Arabic","Noto Kufi Arabic","Aldhabi","Amiri","Amiri Quran","Andalus","Reem Kufi Regular","Scheherazade","Urdu Typesetting","Noto Nastaliq Urdu","Aref Ruqaa","Cairo","Lemonada","Lalezar","Tajawal","Changa","El Messiri","Lateef","Mada","Markazi Text","Mirza","Harmattan","Rakkas","Katibeh","Jomhuria","Shakstah","Mehr Nastaliq","Rooznameh","DecoType Naskh","sans-serif","Times New Roman","Arial","Calibri","Original"];class CustomSettings{constructor(t,e,n,s){this.url=t,this.textSize=e,this.lineHeight=n,this.font=s}static isValidCustomSettings(t){const e=t.url,n=t.textSize,s=t.lineHeight,o=t.font;return!!e&&"string"==typeof e&&!!n&&"number"==typeof n&&n>=100&&n<=300&&!!s&&"number"==typeof s&&s>=100&&s<=300&&!!o&&"string"==typeof o}static isCustomSettings(t){return!!t&&t.hasOwnProperty("url")&&t.hasOwnProperty("textSize")&&t.hasOwnProperty("lineHeight")&&t.hasOwnProperty("font")&&this.isValidCustomSettings(t)}static isCustomSettingsArray(t){return 0===t.length||t.every(t=>this.isCustomSettings(t))}}class CustomFont{constructor(t,e,n){this.fontName=t,this.localName=e,this.url=n}static injectCSS(t){const e=[];return e.push(`@font-face { font-family: '${t.fontName}';`),(t.url||t.localName)&&e.push("src: "),t.url&&t.localName?e.push(`local('${t.localName}'), url('${t.url}');}\n`):t.localName&&!t.url?e.push(`local('${t.localName}');}\n`):t.url&&!t.localName&&e.push(`url('${t.url}');}\n`),e.join("")}static isFontInstalled(t){var e=document.createElement("span");function n(t){e.style.fontFamily=t,document.body.appendChild(e);let n=e.clientWidth;return document.body.removeChild(e),n}e.innerHTML=Array(100).join("wi"),e.style.cssText=["position:absolute","width:auto","font-size:128px","left:-99999px"].join(" !important;");var s=n("monospace"),o=n("serif"),a=n("sans-serif");return s!==n(t+",monospace")||a!==n(t+",sans-serif")||o!==n(t+",serif")}static async isFontUrlValid(t){return fetch(t).then(t=>t.ok).catch(()=>!1)}static async isFontValid(t){let e=!0,n=!0;return t.localName&&(e=CustomFont.isFontInstalled(t.localName)),t.url&&(n=await CustomFont.isFontUrlValid(t.url)),e&&n}static isValidCustomFont(t){const e=t.fontName,n=t.localName,s=t.url;return!!e&&"string"==typeof e&&!!n&&"string"==typeof n&&!!s&&"string"==typeof s}static isCustomFont(t){return!!t&&t.hasOwnProperty("fontName")&&t.hasOwnProperty("localName")&&t.hasOwnProperty("url")&&this.isValidCustomFont(t)}static isCustomFontsArray(t){return 0===t.length||t.every(t=>this.isCustomFont(t))}}var sync={get:async(t=null)=>new Promise(e=>{chrome.storage.sync.get(t,t=>e(t))}),set:async t=>new Promise(e=>chrome.storage.sync.set(t,()=>e()))},tabs={create:async t=>new Promise(e=>chrome.tabs.create({url:t},t=>e(t))),queryAllTabs:async()=>new Promise(t=>chrome.tabs.query({},e=>t(e))),queryCurrentTab:async()=>new Promise(t=>chrome.tabs.query({active:!0,currentWindow:!0},e=>t(e))),sendMessage(t,e){chrome.tabs.sendMessage(t,e)}};async function injectCustomFonts(t){let e=get("wudoohCustomFontsStyle");return e&&(e.textContent="",document.head.removeChild(e),e=null),(e=document.createElement("style")).id="wudoohCustomFontsStyle",t.forEach(t=>{e.textContent=e.textContent.concat(CustomFont.injectCSS(t))}),document.head.append(e),t}function get(t){return document.getElementById(t)}function wait(t,e){return setTimeout(e,t)}Array.prototype.contains=function(t){return-1!==this.indexOf(t)},String.prototype.contains=function(t){return-1!==this.indexOf(t)},Element.prototype.postDelayed=function(t,e){let n=wait(t,()=>{n===this.currentTask&&e.call(this)});this.currentTask=n};